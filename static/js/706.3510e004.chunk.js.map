{"version":3,"file":"static/js/706.3510e004.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/ContactForm.module.css?cbfb","components/Form/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactsList.jsx","webpack://react-homework-template/./src/components/App/App.module.css?583a","pages/Contacts.jsx","hooks/useAuth.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dULym\",\"label\":\"ContactForm_label__vDLxl\",\"input\":\"ContactForm_input__TWImw\",\"btn\":\"ContactForm_btn__QVKUX\"};","\nimport { useState } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { addContacts } from \"redux/contacts/operations\"; \nimport styles from 'components/Form/ContactForm.module.css';\nimport { contactsSelect } from \"redux/contacts/selector\"; \nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n  export const CreateContact = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contactsAdd = useSelector(contactsSelect);\n    const dispatch = useDispatch();\n    const handleChange = e => {\n      const { name, value } = e.target;\n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n        case 'number':\n          setNumber(value);\n          break;\n        default: {\n          return;\n        }\n      }\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      const newContact = contactsAdd.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n      );\n\n    if (newContact) {\n       toast.warning(`${name} of ${number} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n    \n   \n    };\n    \n    return (\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <h3 className={styles.label}>Phonebook</h3>\n        <input\n          className={styles.input}\n          text=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name of contact\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <input\n          className={styles.input}\n          placeholder=\"Enter contact number \"\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  };\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactFilter_label__qRVzC\",\"input\":\"ContactFilter_input__8mWOi\"};","import { useDispatch, useSelector } from \"react-redux\"\nimport styles from 'components/ContactFilter/ContactFilter.module.css';\nimport { filterSelect } from \"redux/contacts/selector\";\nimport { changeFilterAction } from \"redux/contacts/contacts.slice\";\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filterAdd = useSelector(filterSelect);\n\n\n  return (\n    <>\n      <h4 className={styles.label}>Find your contact</h4>\n      <input  className={styles.input}\n        placeholder=\"Enter contact name\"\n        onChange={(e) => dispatch(changeFilterAction(e.target.value)) }\n        value={filterAdd}\n      />\n    </>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"btn\":\"ContactList_btn__6Piat\"};","import { useDispatch, useSelector } from \"react-redux\"\nimport { deleteContact } from \"redux/contacts/operations\"; \nimport styles from 'components/ContactList/ContactList.module.css';\nimport {  contactsSelect, filterSelect } from \"redux/contacts/selector\";\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(filterSelect);\n  const contacts = useSelector(contactsSelect);\n\n  const onDeleteContact = (id) => {\n    dispatch(deleteContact(id));\n  };\n\n  const getVisibleContacts = () => {\n  \n  \n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filteredContacts.toLowerCase())\n    );\n   \n  };\n  \n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ul className={styles.list}>\n      {visibleContacts.map((contact) => (\n        <li key={contact.id} className={styles.item}>\n            <p className={styles.text}>{contact.name}:{contact.number}</p>\n            <button className={styles.btn} onClick={() => dispatch(onDeleteContact(contact.id))}>\n              Delete \n            </button>\n        </li>\n      ))}\n    </ul>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__cu9yO\"};","import { CreateContact} from 'components/Form/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactsList} from 'components/ContactList/ContactsList';\nimport styles from '../components/App/App.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations'; \nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader/Loader';\nimport UseAuth from 'hooks/useAuth';\nimport { selectUserName } from 'redux/auth/selectors';\nimport { contactsSelect, getError, getIsLoading } from 'redux/contacts/selector';\n\nconst PageContacts = () => {\n  const loading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n  const contactsAdd = useSelector(contactsSelect);\n  const user = useSelector(selectUserName);\n  \n  useEffect(() => {\n     if (user === null) return;\n    dispatch(fetchContacts());\n  }, [dispatch, user]);\n\n useEffect(() => {\n    if (error) {\n      toast.error('Oops. Something went wrong 😭');\n    }\n }, [error]);\n  \n  return (\n    <div className={styles.container}>\n      <CreateContact />\n        {contactsAdd.length === 0 ? (\n        <p>There is no contacts</p>\n      ) : (\n        <>\n          <ContactFilter />\n          <ContactsList />\n        </>\n      )} \n        {loading && <Loader />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        closeOnClick\n        theme=\"colored\" \n       />\n    </div>\n  );\n};\nconst ContactsPage = UseAuth(PageContacts, '/login');\nexport default ContactsPage;","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoggedIn,\n  selectIsRefreshing,\n} from 'redux/auth/selectors';\nimport { Navigate } from 'react-router-dom';\n\nexport const UseAuth = (Component, navigateTo) => {\n\n  const ProtectedComponent = props => {\n      const isLoggedIn = useSelector(selectIsLoggedIn);\n      const isRefreshing = useSelector(selectIsRefreshing);\n\n    return isLoggedIn && !isRefreshing ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={navigateTo} />\n    );\n  };\n\n  return ProtectedComponent;\n}\n\nexport default UseAuth;\n\n"],"names":["CreateContact","useState","name","setName","number","setNumber","contactsAdd","useSelector","contactsSelect","dispatch","useDispatch","handleChange","e","target","value","className","styles","onSubmit","preventDefault","some","contact","toLowerCase","toast","addContacts","text","placeholder","onChange","pattern","title","required","type","ContactFilter","filterAdd","filterSelect","changeFilterAction","ContactsList","filteredContacts","contacts","visibleContacts","filter","includes","map","onClick","id","deleteContact","Component","navigateTo","props","isLoggedIn","selectIsLoggedIn","isRefreshing","selectIsRefreshing","to","UseAuth","loading","getIsLoading","error","getError","user","selectUserName","useEffect","fetchContacts","length","Loader","position","autoClose","closeOnClick","theme"],"sourceRoot":""}